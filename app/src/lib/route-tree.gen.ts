/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../routes/__root'
import { Route as PrivateLayoutRouteImport } from './../routes/_private/layout'
import { Route as AuthenticationLayoutRouteImport } from './../routes/_authentication/layout'
import { Route as AuthenticationIndexRouteImport } from './../routes/_authentication/index'
import { Route as RecoveryRequestCodeRouteImport } from './../routes/_recovery/request-code'
import { Route as PrivateSettingsRouteImport } from './../routes/_private/settings'
import { Route as PrivateProfileRouteImport } from './../routes/_private/profile'
import { Route as PrivateDashboardRouteImport } from './../routes/_private/dashboard'
import { Route as AuthenticationSignUpRouteImport } from './../routes/_authentication/sign-up'
import { Route as PrivateUsersIndexRouteImport } from './../routes/_private/users/index'
import { Route as PrivateUserGroupsIndexRouteImport } from './../routes/_private/user-groups/index'
import { Route as PrivateCollectionsIndexRouteImport } from './../routes/_private/collections/index'
import { Route as PrivateCollectionsSlugLayoutRouteImport } from './../routes/_private/collections/$slug/layout'
import { Route as PrivateCollectionsSlugIndexRouteImport } from './../routes/_private/collections/$slug/index'

const PrivateLayoutRoute = PrivateLayoutRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationLayoutRoute = AuthenticationLayoutRouteImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationIndexRoute = AuthenticationIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticationLayoutRoute,
} as any)
const RecoveryRequestCodeRoute = RecoveryRequestCodeRouteImport.update({
  id: '/_recovery/request-code',
  path: '/request-code',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateSettingsRoute = PrivateSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateProfileRoute = PrivateProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateDashboardRoute = PrivateDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const AuthenticationSignUpRoute = AuthenticationSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthenticationLayoutRoute,
} as any)
const PrivateUsersIndexRoute = PrivateUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateUserGroupsIndexRoute = PrivateUserGroupsIndexRouteImport.update({
  id: '/user-groups/',
  path: '/user-groups/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateCollectionsIndexRoute = PrivateCollectionsIndexRouteImport.update({
  id: '/collections/',
  path: '/collections/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateCollectionsSlugLayoutRoute =
  PrivateCollectionsSlugLayoutRouteImport.update({
    id: '/collections/$slug',
    path: '/collections/$slug',
    getParentRoute: () => PrivateLayoutRoute,
  } as any)
const PrivateCollectionsSlugIndexRoute =
  PrivateCollectionsSlugIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PrivateCollectionsSlugLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/sign-up': typeof AuthenticationSignUpRoute
  '/dashboard': typeof PrivateDashboardRoute
  '/profile': typeof PrivateProfileRoute
  '/settings': typeof PrivateSettingsRoute
  '/request-code': typeof RecoveryRequestCodeRoute
  '/': typeof AuthenticationIndexRoute
  '/collections/$slug': typeof PrivateCollectionsSlugLayoutRouteWithChildren
  '/collections': typeof PrivateCollectionsIndexRoute
  '/user-groups': typeof PrivateUserGroupsIndexRoute
  '/users': typeof PrivateUsersIndexRoute
  '/collections/$slug/': typeof PrivateCollectionsSlugIndexRoute
}
export interface FileRoutesByTo {
  '/sign-up': typeof AuthenticationSignUpRoute
  '/dashboard': typeof PrivateDashboardRoute
  '/profile': typeof PrivateProfileRoute
  '/settings': typeof PrivateSettingsRoute
  '/request-code': typeof RecoveryRequestCodeRoute
  '/': typeof AuthenticationIndexRoute
  '/collections': typeof PrivateCollectionsIndexRoute
  '/user-groups': typeof PrivateUserGroupsIndexRoute
  '/users': typeof PrivateUsersIndexRoute
  '/collections/$slug': typeof PrivateCollectionsSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authentication': typeof AuthenticationLayoutRouteWithChildren
  '/_private': typeof PrivateLayoutRouteWithChildren
  '/_authentication/sign-up': typeof AuthenticationSignUpRoute
  '/_private/dashboard': typeof PrivateDashboardRoute
  '/_private/profile': typeof PrivateProfileRoute
  '/_private/settings': typeof PrivateSettingsRoute
  '/_recovery/request-code': typeof RecoveryRequestCodeRoute
  '/_authentication/': typeof AuthenticationIndexRoute
  '/_private/collections/$slug': typeof PrivateCollectionsSlugLayoutRouteWithChildren
  '/_private/collections/': typeof PrivateCollectionsIndexRoute
  '/_private/user-groups/': typeof PrivateUserGroupsIndexRoute
  '/_private/users/': typeof PrivateUsersIndexRoute
  '/_private/collections/$slug/': typeof PrivateCollectionsSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-up'
    | '/dashboard'
    | '/profile'
    | '/settings'
    | '/request-code'
    | '/'
    | '/collections/$slug'
    | '/collections'
    | '/user-groups'
    | '/users'
    | '/collections/$slug/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-up'
    | '/dashboard'
    | '/profile'
    | '/settings'
    | '/request-code'
    | '/'
    | '/collections'
    | '/user-groups'
    | '/users'
    | '/collections/$slug'
  id:
    | '__root__'
    | '/_authentication'
    | '/_private'
    | '/_authentication/sign-up'
    | '/_private/dashboard'
    | '/_private/profile'
    | '/_private/settings'
    | '/_recovery/request-code'
    | '/_authentication/'
    | '/_private/collections/$slug'
    | '/_private/collections/'
    | '/_private/user-groups/'
    | '/_private/users/'
    | '/_private/collections/$slug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticationLayoutRoute: typeof AuthenticationLayoutRouteWithChildren
  PrivateLayoutRoute: typeof PrivateLayoutRouteWithChildren
  RecoveryRequestCodeRoute: typeof RecoveryRequestCodeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication/': {
      id: '/_authentication/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticationIndexRouteImport
      parentRoute: typeof AuthenticationLayoutRoute
    }
    '/_recovery/request-code': {
      id: '/_recovery/request-code'
      path: '/request-code'
      fullPath: '/request-code'
      preLoaderRoute: typeof RecoveryRequestCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/settings': {
      id: '/_private/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof PrivateSettingsRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/profile': {
      id: '/_private/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof PrivateProfileRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/dashboard': {
      id: '/_private/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_authentication/sign-up': {
      id: '/_authentication/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthenticationSignUpRouteImport
      parentRoute: typeof AuthenticationLayoutRoute
    }
    '/_private/users/': {
      id: '/_private/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof PrivateUsersIndexRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/user-groups/': {
      id: '/_private/user-groups/'
      path: '/user-groups'
      fullPath: '/user-groups'
      preLoaderRoute: typeof PrivateUserGroupsIndexRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/collections/': {
      id: '/_private/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof PrivateCollectionsIndexRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/collections/$slug': {
      id: '/_private/collections/$slug'
      path: '/collections/$slug'
      fullPath: '/collections/$slug'
      preLoaderRoute: typeof PrivateCollectionsSlugLayoutRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/collections/$slug/': {
      id: '/_private/collections/$slug/'
      path: '/'
      fullPath: '/collections/$slug/'
      preLoaderRoute: typeof PrivateCollectionsSlugIndexRouteImport
      parentRoute: typeof PrivateCollectionsSlugLayoutRoute
    }
  }
}

interface AuthenticationLayoutRouteChildren {
  AuthenticationSignUpRoute: typeof AuthenticationSignUpRoute
  AuthenticationIndexRoute: typeof AuthenticationIndexRoute
}

const AuthenticationLayoutRouteChildren: AuthenticationLayoutRouteChildren = {
  AuthenticationSignUpRoute: AuthenticationSignUpRoute,
  AuthenticationIndexRoute: AuthenticationIndexRoute,
}

const AuthenticationLayoutRouteWithChildren =
  AuthenticationLayoutRoute._addFileChildren(AuthenticationLayoutRouteChildren)

interface PrivateCollectionsSlugLayoutRouteChildren {
  PrivateCollectionsSlugIndexRoute: typeof PrivateCollectionsSlugIndexRoute
}

const PrivateCollectionsSlugLayoutRouteChildren: PrivateCollectionsSlugLayoutRouteChildren =
  {
    PrivateCollectionsSlugIndexRoute: PrivateCollectionsSlugIndexRoute,
  }

const PrivateCollectionsSlugLayoutRouteWithChildren =
  PrivateCollectionsSlugLayoutRoute._addFileChildren(
    PrivateCollectionsSlugLayoutRouteChildren,
  )

interface PrivateLayoutRouteChildren {
  PrivateDashboardRoute: typeof PrivateDashboardRoute
  PrivateProfileRoute: typeof PrivateProfileRoute
  PrivateSettingsRoute: typeof PrivateSettingsRoute
  PrivateCollectionsSlugLayoutRoute: typeof PrivateCollectionsSlugLayoutRouteWithChildren
  PrivateCollectionsIndexRoute: typeof PrivateCollectionsIndexRoute
  PrivateUserGroupsIndexRoute: typeof PrivateUserGroupsIndexRoute
  PrivateUsersIndexRoute: typeof PrivateUsersIndexRoute
}

const PrivateLayoutRouteChildren: PrivateLayoutRouteChildren = {
  PrivateDashboardRoute: PrivateDashboardRoute,
  PrivateProfileRoute: PrivateProfileRoute,
  PrivateSettingsRoute: PrivateSettingsRoute,
  PrivateCollectionsSlugLayoutRoute:
    PrivateCollectionsSlugLayoutRouteWithChildren,
  PrivateCollectionsIndexRoute: PrivateCollectionsIndexRoute,
  PrivateUserGroupsIndexRoute: PrivateUserGroupsIndexRoute,
  PrivateUsersIndexRoute: PrivateUsersIndexRoute,
}

const PrivateLayoutRouteWithChildren = PrivateLayoutRoute._addFileChildren(
  PrivateLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticationLayoutRoute: AuthenticationLayoutRouteWithChildren,
  PrivateLayoutRoute: PrivateLayoutRouteWithChildren,
  RecoveryRequestCodeRoute: RecoveryRequestCodeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
